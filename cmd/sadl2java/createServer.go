package main

import(
	"bufio"
	"fmt"
	"os"
	"path/filepath"
	"text/template"
)

type serverData struct {
	Name string
	PackageLine string
	Port int
	MainClass string
	ResourcesClass string
}

func createServer(name, pkg, dir, src string) error {
	data := &serverData{
		Name: name,
		Port: 8080,
		MainClass: "Main",
		ResourcesClass: "Resources",
	}
	base := filepath.Join(dir, src)
	if pkg != "" {
		data.PackageLine = "package " + pkg + ";\n"
		base = filepath.Join(base, javaPackageToPath(pkg))
	}
	err := createFileFromTemplate(base, data.MainClass + ".java", mainTemplate, data)
	if err != nil {
		return err
	}
	return createFileFromTemplate(base, data.ResourcesClass + ".java", resourcesTemplate, data)
}

func createFileFromTemplate(dir, file string, tmplSource string, data interface{}) error {
	path := filepath.Join(dir, file)
	if fileExists(path) {
		fmt.Printf("[%s already exists, not overwriting]\n", path)
		return nil
	}
   f, err := os.Create(path)
   if err != nil {
		return err
   }
	defer f.Close()
   writer := bufio.NewWriter(f)
	tmpl, err := template.New(file).Parse(tmplSource)
	if err != nil {
		return err
	}
	err = tmpl.Execute(writer, data)
	if err != nil {
		return err
	}
	writer.Flush()
	return nil
}

const mainTemplate = `//
// Sample server main program generated by sadl2java
//
{{.PackageLine}}

import org.eclipse.jetty.server.Server;
import org.glassfish.jersey.jetty.JettyHttpContainerFactory;
import org.glassfish.jersey.server.ResourceConfig;
import org.glassfish.hk2.utilities.binding.AbstractBinder;
import org.glassfish.jersey.jackson.JacksonFeature;
import javax.ws.rs.core.UriBuilder;
import java.io.IOException;
import java.net.URI;

public class {{.MainClass}} {

    public static String BASE_URI = "http://localhost:{{.Port}}/";

    public static void main(String[] args) {
        try {
            Server server = startServer();
            server.join();
        } catch (Exception e) {
            System.err.println("*** " + e);
        }
    }

    public static Server startServer() throws Exception {
        URI baseUri = UriBuilder.fromUri(BASE_URI).build();
        ResourceConfig config = new ResourceConfig({{.ResourcesClass}}.class);
        Server server = JettyHttpContainerFactory.createServer(baseUri, config);
        server.start();
        System.out.println(String.format("Service started at %s", BASE_URI));
        return server;
    }
}
`


const resourcesTemplate = `//
// Example resources generated by sadl2java
//
{{.PackageLine}}

import java.util.*;
import javax.inject.Inject;
import javax.ws.rs.*;
import javax.ws.rs.core.*;
import static javax.ws.rs.core.Response.Status;

@Path("/")
public class {{.ResourcesClass}} {

    static public class Hello {
        public String message;
    }

    @GET
    @Path("/hello")
    @Produces(MediaType.APPLICATION_JSON)
    public Hello hello() {
        Hello h = new Hello();
        h.message = "Hello there";
        return h;
    }
}
`
