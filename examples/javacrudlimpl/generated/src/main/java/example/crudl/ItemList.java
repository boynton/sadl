//
// Generated by sadl
//
package example.crudl;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.Instant;
import java.util.List;
import java.util.UUID;
import javax.validation.constraints.NotNull;

//A paginated list of items
@JsonDeserialize(builder = ItemList.ItemListBuilder.class)
public class ItemList {
    //The array is always returned, even if empty.
    @NotNull
    private final List<Item> items;

    //The token to skip to the next batch is returned only if there are more.
    @JsonInclude(JsonInclude.Include.NON_EMPTY) /* Optional field */
    private final UUID next;

    public ItemList(List<Item> items, UUID next) {
        this.items = items;
        this.next = next;
    }

    public List<Item> getItems() {
        return items;
    }

    public UUID getNext() {
        return next;
    }

    public static ItemListBuilder builder() {
        return new ItemListBuilder();
    }

    @JsonPOJOBuilder(withPrefix="")
    public static class ItemListBuilder {
        private List<Item> items;
        private UUID next;

        public ItemListBuilder items(List<Item> items) {
            this.items = items;
            return this;
        }

        public ItemListBuilder next(UUID next) {
            this.next = next;
            return this;
        }

        public ItemList build() {
            return new ItemList(items, next);
        }
    }
}
